<?phpclass DB{	private static $connection;	public static $options = array(		PDO::ATTR_ERRMODE => PDO::ERRMODE_WARNING,		PDO::MYSQL_ATTR_INIT_COMMAND => "SET NAMES utf8",		PDO::ATTR_EMULATE_PREPARES => false,    //PDO::ATTR_PERSISTENT => true, 	);	public static function connect($data) {		$dsn = "mysql:dbname=" . $data['name'] . ";host=" . $data['server'] . ";port=3306";		if (!isset(self::$connection)) {      # echo $dsn;			self::$connection = new PDO($dsn, $data['user'], $data['pass'], static::$options);		}	}  	/**	 * Alias pro starou funkci mysql_query()	 *	 * @param String $sql SQL kod prikazu	 * @param array $where pole parametru pokud ma $sql WHERE klauzuli	 */	public static function query($sql, $where = NULL){		$sth = self::$connection->prepare($sql);		$sth->execute($where);				return $sth;	}		/**	 * Alias pro starou funkci mysql_fetch_assoc()	 *	 * @param $res Vysledek z metody DB::query()	 * @return mixed	 */	public static function assoc($res){		$result = $res->fetch(PDO::FETCH_ASSOC);				return $result;	}  	public static function assocAll($res){		$result = $res->fetchAll(PDO::FETCH_ASSOC);				return $result;	}		/**	 * Vrati ID posledniho vlozeneho radku do databaze	 *	 * @return ID posledniho zaznamu	 */	/*	public static function lastInsertId(){		return self::$connection->lastInsertId();	}  	private static function checkIdentifiers($identifiers) {		foreach ($identifiers as $identifier) {			if (!preg_match('/^[a-zA-Z0-9\_\-]+$/u', $identifier))				throw new Exception('Dangerous identifier in SQL query');				// Detekce pokusu o SQL-Injection		}	}*/}